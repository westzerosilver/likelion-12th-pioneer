{"ast":null,"code":"var _jsxFileName = \"/Users/modzivv/my-app/src/components/PraiseMyself.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PraiseMyself.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst guide = [\"오늘 스타일에 바뀐 점이 있나요?\", \"바뀐 점들 중 어떤 점이 가장 마음에 드나요?\", \"그 점을 이용하여 나에게 칭찬을\\n남겨주세요.\"];\nconst PraiseMyself = () => {\n  _s();\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\n  const handleNext = () => {\n    if (step < guide.length - 1) {\n      setStep(step + 1);\n    } else {\n      setStep(guide.length);\n    }\n  };\n  const handleChange = e => {\n    const newAnswers = [...answers];\n    newAnswers[step] = e.target.value;\n    setAnswers(newAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"praisemyself-container\",\n    children: step < guide.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide\",\n        children: guide[step].split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"guide-line\",\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uB0B4 \\uB2F5\\uBCC0 \\uC785\\uB825\",\n        value: answers[step],\n        onChange: handleChange,\n        className: \"answer-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"guide-next-btn\",\n        children: step < guide.length - 1 ? \"다음으로\" : \"오늘의 칭찬 완료\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-title\",\n        children: \"\\uC624\\uB298 \\uB098\\uC5D0\\uAC8C \\uCE6D\\uCC2C\\uD55C \\uC810\\uC774\\uC5D0\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"answer-summary\",\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_s(PraiseMyself, \"S++tcZQ7ndY/nKWquJpePtkxTZE=\");\n_c = PraiseMyself;\nexport default PraiseMyself;\nvar _c;\n$RefreshReg$(_c, \"PraiseMyself\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","guide","PraiseMyself","_s","step","setStep","answers","setAnswers","handleNext","length","handleChange","e","newAnswers","target","value","className","children","split","map","line","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","answer","_c","$RefreshReg$"],"sources":["/Users/modzivv/my-app/src/components/PraiseMyself.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PraiseMyself.css';\n\nconst guide = [\n    \"오늘 스타일에 바뀐 점이 있나요?\",\n    \"바뀐 점들 중 어떤 점이 가장 마음에 드나요?\",\n    \"그 점을 이용하여 나에게 칭찬을\\n남겨주세요.\"\n  ];\n  \n  const PraiseMyself = () => {\n    const [step, setStep] = useState(0);\n    const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\n  \n    const handleNext = () => {\n      if (step < guide.length - 1) {\n        setStep(step + 1);\n      } else {\n        setStep(guide.length);\n      }\n    };\n  \n    const handleChange = (e) => {\n      const newAnswers = [...answers];\n      newAnswers[step] = e.target.value;\n      setAnswers(newAnswers);\n    };\n  \n    return (\n      <div className=\"praisemyself-container\">\n        {step < guide.length ? (\n          <>\n            <div className=\"guide\">\n              {guide[step].split('\\n').map((line, index) => (\n                <span key={index} className=\"guide-line\">{line}</span>\n              ))}\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"내 답변 입력\"\n              value={answers[step]}\n              onChange={handleChange}\n              className=\"answer-input\"\n            />\n            <button onClick={handleNext} className=\"guide-next-btn\">\n              {step < guide.length - 1 ? \"다음으로\" : \"오늘의 칭찬 완료\"}\n            </button>\n          </>\n        ) : (\n          <div className=\"summary\">\n            <div className=\"summary-title\">오늘 나에게 칭찬한 점이에요!</div>\n            <div className=\"answers\">\n              {answers.map((answer, index) => (\n                <p key={index} className=\"answer-summary\">{answer}</p>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  export default PraiseMyself;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
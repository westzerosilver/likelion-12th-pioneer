{"ast":null,"code":"var _jsxFileName = \"/Users/modzivv/my-app/src/components/TriggerAnalysis.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport './TriggerAnalysis.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\n\n// Custom plugin to draw rounded bars\nconst drawRoundedBars = {\n  id: 'drawRoundedBars',\n  afterDatasetsDraw: chart => {\n    const ctx = chart.ctx;\n    chart.data.datasets.forEach((dataset, i) => {\n      const meta = chart.getDatasetMeta(i);\n      meta.data.forEach((bar, index) => {\n        const radius = 30; // 둥근 모서리의 반경\n        const {\n          x,\n          y,\n          base\n        } = bar;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(x - bar.width / 2 + radius, base);\n        ctx.lineTo(x + bar.width / 2 - radius, base);\n        ctx.quadraticCurveTo(x + bar.width / 2, base, x + bar.width / 2, base - radius);\n        ctx.lineTo(x + bar.width / 2, y + radius);\n        ctx.quadraticCurveTo(x + bar.width / 2, y, x + bar.width / 2 - radius, y);\n        ctx.lineTo(x - bar.width / 2 + radius, y);\n        ctx.quadraticCurveTo(x - bar.width / 2, y, x - bar.width / 2, y + radius);\n        ctx.lineTo(x - bar.width / 2, base - radius);\n        ctx.quadraticCurveTo(x - bar.width / 2, base, x - bar.width / 2 + radius, base);\n        ctx.closePath();\n        ctx.fillStyle = dataset.backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      });\n    });\n  }\n};\nChart.register(drawRoundedBars);\nconst TriggerAnalysis = () => {\n  // 각 요일별로 발생한 트리거 횟수 합산\n  const triggerData = {\n    // 예시 데이터\n    '월': ['폭식', '구토', '변비약 복용', '씹고 뱉기'],\n    '화': ['구토'],\n    '수': ['폭식', '구토', '씹고 뱉기'],\n    '목': ['폭식', '변비약 복용'],\n    '금': ['폭식', '변비약 복용', '씹고 뱉기'],\n    '토': [],\n    '일': ['폭식', '구토', '씹고 뱉기']\n  };\n  const totalTriggersPerDay = Object.keys(triggerData).map(day => triggerData[day].length);\n  const barData = {\n    labels: ['월', '화', '수', '목', '금', '토', '일'],\n    datasets: [{\n      label: '트리거 발생 횟수',\n      data: totalTriggersPerDay,\n      backgroundColor: '#FFCF24'\n    }]\n  };\n  const symptomData = {\n    labels: ['폭식', '구토', '변비약 복용', '씹고 뱉기'],\n    datasets: [{\n      data: [4, 2, 3, 1],\n      backgroundColor: ['#FFCF24', '#FFDF24', '#FFE589', '#FFD700'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trigger-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trigger-title\",\n      children: \"\\uC2DD\\uC0AC \\uD2B8\\uB9AC\\uAC70 \\uC99D\\uC0C1 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trigger-sub-title\",\n      children: \"\\uC8FC\\uAC04 \\uD2B8\\uB9AC\\uAC70 \\uBC1C\\uC0DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: barData,\n        options: {\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"symptom-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symptom-title\",\n        children: \"\\uC99D\\uC0C1\\uBCC4 \\uBC1C\\uC0DD \\uBE48\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symptom-bar\",\n        children: symptomData.labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symptom-segment\",\n          style: {\n            backgroundColor: symptomData.datasets[0].backgroundColor[index],\n            flexGrow: symptomData.datasets[0].data[index]\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"symptom-label\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c = TriggerAnalysis;\nexport default TriggerAnalysis;\nvar _c;\n$RefreshReg$(_c, \"TriggerAnalysis\");","map":{"version":3,"names":["React","Bar","Chart","registerables","jsxDEV","_jsxDEV","register","drawRoundedBars","id","afterDatasetsDraw","chart","ctx","data","datasets","forEach","dataset","i","meta","getDatasetMeta","bar","index","radius","x","y","base","save","beginPath","moveTo","width","lineTo","quadraticCurveTo","closePath","fillStyle","backgroundColor","fill","restore","TriggerAnalysis","triggerData","totalTriggersPerDay","Object","keys","map","day","length","barData","labels","label","symptomData","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","plugins","legend","display","style","flexGrow","_c","$RefreshReg$"],"sources":["/Users/modzivv/my-app/src/components/TriggerAnalysis.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport './TriggerAnalysis.css';\n\n// Register Chart.js components\nChart.register(...registerables);\n\n// Custom plugin to draw rounded bars\nconst drawRoundedBars = {\n  id: 'drawRoundedBars',\n  afterDatasetsDraw: (chart) => {\n    const ctx = chart.ctx;\n    chart.data.datasets.forEach((dataset, i) => {\n      const meta = chart.getDatasetMeta(i);\n      meta.data.forEach((bar, index) => {\n        const radius = 30; // 둥근 모서리의 반경\n        const { x, y, base } = bar;\n\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(x - bar.width / 2 + radius, base);\n        ctx.lineTo(x + bar.width / 2 - radius, base);\n        ctx.quadraticCurveTo(x + bar.width / 2, base, x + bar.width / 2, base - radius);\n        ctx.lineTo(x + bar.width / 2, y + radius);\n        ctx.quadraticCurveTo(x + bar.width / 2, y, x + bar.width / 2 - radius, y);\n        ctx.lineTo(x - bar.width / 2 + radius, y);\n        ctx.quadraticCurveTo(x - bar.width / 2, y, x - bar.width / 2, y + radius);\n        ctx.lineTo(x - bar.width / 2, base - radius);\n        ctx.quadraticCurveTo(x - bar.width / 2, base, x - bar.width / 2 + radius, base);\n        ctx.closePath();\n        ctx.fillStyle = dataset.backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      });\n    });\n  },\n};\n\nChart.register(drawRoundedBars);\n\nconst TriggerAnalysis = () => {\n  // 각 요일별로 발생한 트리거 횟수 합산\n  const triggerData = { // 예시 데이터\n    '월': ['폭식', '구토', '변비약 복용', '씹고 뱉기'],\n    '화': ['구토'],\n    '수': ['폭식', '구토', '씹고 뱉기'],\n    '목': ['폭식', '변비약 복용'],\n    '금': ['폭식', '변비약 복용', '씹고 뱉기'],\n    '토': [],\n    '일': ['폭식', '구토', '씹고 뱉기'],\n  };\n\n  const totalTriggersPerDay = Object.keys(triggerData).map(day => triggerData[day].length);\n\n  const barData = {\n    labels: ['월', '화', '수', '목', '금', '토', '일'],\n    datasets: [\n      {\n        label: '트리거 발생 횟수',\n        data: totalTriggersPerDay,\n        backgroundColor: '#FFCF24',\n      },\n    ],\n  };\n\n  const symptomData = {\n    labels: ['폭식', '구토', '변비약 복용', '씹고 뱉기'],\n    datasets: [\n      {\n        data: [4, 2, 3, 1],\n        backgroundColor: ['#FFCF24', '#FFDF24', '#FFE589', '#FFD700'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"trigger-analysis\">\n      <div className='trigger-title'>식사 트리거 증상 분석</div>\n      <div className='trigger-sub-title'>주간 트리거 발생</div>\n      <div className=\"chart-container\">\n        <Bar data={barData} options={{ plugins: { legend: { display: false } } }} />\n      </div>\n      <div className=\"symptom-container\">\n        <div className=\"symptom-title\">증상별 발생 빈도</div>\n        <div className=\"symptom-bar\">\n          {symptomData.labels.map((label, index) => (\n            <div key={index} className=\"symptom-segment\" style={{ backgroundColor: symptomData.datasets[0].backgroundColor[index], flexGrow: symptomData.datasets[0].data[index] }}>\n              <span className=\"symptom-label\">{label}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TriggerAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
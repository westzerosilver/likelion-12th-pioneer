{"ast":null,"code":"var _jsxFileName = \"/Users/modzivv/my-app/src/components/PraiseMyself.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst guide = [\"오늘 스타일에 바뀐 점이 있나요?\", \"바뀐 점들 중 어떤 점이 가장 마음에 드나요?\", \"그 점을 이용하여 나에게 칭찬을 남겨주세요.\"];\nconst PraiseMyself = () => {\n  _s();\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\n  const handleNext = () => {\n    if (step < guide.length - 1) {\n      setStep(step + 1);\n    } else {\n      setStep(guide.length);\n    }\n  };\n  const handleChange = e => {\n    const newAnswers = [...answers];\n    newAnswers[step] = e.target.value;\n    setAnswers(newAnswers);\n  };\n  const highlightKeywords = text => {\n    return text.split(' ').map((word, index) => keywords.includes(word) ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#FFCF24'\n      },\n      children: [word, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [word, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"praisemyself-container\",\n    children: step < guide.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide\",\n        children: guide[step].split('<br>').map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uB0B4 \\uB2F5\\uBCC0 \\uC785\\uB825\",\n        value: answers[step],\n        onChange: handleChange,\n        className: \"answer-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"guide-next-btn\",\n        children: step < guide.length - 1 ? \"다음으로\" : \"오늘의 칭찬 완료\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-title\",\n        children: \"\\uC624\\uB298 \\uB098\\uC5D0\\uAC8C \\uCE6D\\uCC2C\\uD55C \\uC810\\uC774\\uC5D0\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"answer-summary\",\n          children: highlightKeywords(answer)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n_s(PraiseMyself, \"S++tcZQ7ndY/nKWquJpePtkxTZE=\");\n_c = PraiseMyself;\nvar _c;\n$RefreshReg$(_c, \"PraiseMyself\");","map":{"version":3,"names":["guide","PraiseMyself","_s","step","setStep","useState","answers","setAnswers","handleNext","length","handleChange","e","newAnswers","target","value","highlightKeywords","text","split","map","word","index","keywords","includes","_jsxDEV","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_Fragment","line","type","placeholder","onChange","onClick","answer","_c","$RefreshReg$"],"sources":["/Users/modzivv/my-app/src/components/PraiseMyself.js"],"sourcesContent":["const guide = [\n    \"오늘 스타일에 바뀐 점이 있나요?\",\n    \"바뀐 점들 중 어떤 점이 가장 마음에 드나요?\",\n    \"그 점을 이용하여 나에게 칭찬을 남겨주세요.\"\n  ];\n  \n  const PraiseMyself = () => {\n    const [step, setStep] = useState(0);\n    const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\n  \n    const handleNext = () => {\n      if (step < guide.length - 1) {\n        setStep(step + 1);\n      } else {\n        setStep(guide.length);\n      }\n    };\n  \n    const handleChange = (e) => {\n      const newAnswers = [...answers];\n      newAnswers[step] = e.target.value;\n      setAnswers(newAnswers);\n    };\n  \n    const highlightKeywords = (text) => {\n      return text.split(' ').map((word, index) => (\n        keywords.includes(word) ?\n        <span key={index} style={{ color: '#FFCF24' }}>{word} </span> :\n        <span key={index}>{word} </span>\n      ));\n    };\n  \n    return (\n      <div className=\"praisemyself-container\">\n        {step < guide.length ? (\n          <>\n            <div className=\"guide\">\n              {guide[step].split('<br>').map((line, index) => (\n                <p key={index}>{line}</p>\n              ))}\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"내 답변 입력\"\n              value={answers[step]}\n              onChange={handleChange}\n              className=\"answer-input\"\n            />\n            <button onClick={handleNext} className=\"guide-next-btn\">\n              {step < guide.length - 1 ? \"다음으로\" : \"오늘의 칭찬 완료\"}\n            </button>\n          </>\n        ) : (\n          <div className=\"summary\">\n            <div className=\"summary-title\">오늘 나에게 칭찬한 점이에요!</div>\n            <div className=\"answers\">\n              {answers.map((answer, index) => (\n                <p key={index} className=\"answer-summary\">{highlightKeywords(answer)}</p>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/modzivv/my-app/src/components/PraiseMyself.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PraiseMyself.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst guide = [\"오늘 스타일에 바뀐 점이 있나요?\", \"바뀐 점들 중 어떤 점이 가장 마음에 드나요?\", \"그 점을 이용하여 나에게 칭찬을\\n남겨주세요.\"];\nconst keywords = ['살', '마른'];\nconst PraiseMyself = () => {\n  _s();\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\n  const handleNext = () => {\n    if (step < guide.length - 1) {\n      setStep(step + 1);\n    } else {\n      setStep(guide.length);\n    }\n  };\n  const handleChange = e => {\n    const newAnswers = [...answers];\n    newAnswers[step] = e.target.value;\n    setAnswers(newAnswers);\n  };\n  const highlightKeywords = text => {\n    return text.split(/(\\s+)/).map((segment, index) => {\n      let highlighted = false;\n      const content = keywords.map(keyword => {\n        const regex = new RegExp(`(${keyword})`, 'gi');\n        if (regex.test(segment)) {\n          highlighted = true;\n          return segment.replace(regex, `<span style=\"color: #FFCF24;\">$1</span>`);\n        }\n        return segment;\n      }).join('');\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: highlighted ? content : segment\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"praisemyself-container\",\n    children: step < guide.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide\",\n        children: guide[step].split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"guide-line\",\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uB0B4 \\uB2F5\\uBCC0 \\uC785\\uB825\",\n        value: answers[step],\n        onChange: handleChange,\n        className: \"answer-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"guide-next-btn\",\n        children: step < guide.length - 1 ? \"다음으로\" : \"오늘의 칭찬 완료\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-title\",\n        children: \"\\uC624\\uB298 \\uB098\\uC5D0\\uAC8C \\uCE6D\\uCC2C\\uD55C \\uC810\\uC774\\uC5D0\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"answer-summary\",\n          children: highlightKeywords(answer)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PraiseMyself, \"S++tcZQ7ndY/nKWquJpePtkxTZE=\");\n_c = PraiseMyself;\nexport default PraiseMyself;\nvar _c;\n$RefreshReg$(_c, \"PraiseMyself\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","guide","keywords","PraiseMyself","_s","step","setStep","answers","setAnswers","handleNext","length","handleChange","e","newAnswers","target","value","highlightKeywords","text","split","map","segment","index","highlighted","content","keyword","regex","RegExp","test","replace","join","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","className","children","line","type","placeholder","onChange","onClick","answer","_c","$RefreshReg$"],"sources":["/Users/modzivv/my-app/src/components/PraiseMyself.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PraiseMyself.css';\n\nconst guide = [\n  \"오늘 스타일에 바뀐 점이 있나요?\",\n  \"바뀐 점들 중 어떤 점이 가장 마음에 드나요?\",\n  \"그 점을 이용하여 나에게 칭찬을\\n남겨주세요.\"\n];\n\nconst keywords = ['살', '마른'];\n\nconst PraiseMyself = () => {\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\n\n  const handleNext = () => {\n    if (step < guide.length - 1) {\n      setStep(step + 1);\n    } else {\n      setStep(guide.length);\n    }\n  };\n\n  const handleChange = (e) => {\n    const newAnswers = [...answers];\n    newAnswers[step] = e.target.value;\n    setAnswers(newAnswers);\n  };\n\n  const highlightKeywords = (text) => {\n    return text.split(/(\\s+)/).map((segment, index) => {\n      let highlighted = false;\n  \n      const content = keywords.map(keyword => {\n        const regex = new RegExp(`(${keyword})`, 'gi');\n        if (regex.test(segment)) {\n          highlighted = true;\n          return segment.replace(regex, `<span style=\"color: #FFCF24;\">$1</span>`);\n        }\n        return segment;\n      }).join('');\n  \n      return (\n        <span key={index} dangerouslySetInnerHTML={{ __html: highlighted ? content : segment }} />\n      );\n    });\n  };\n  \n\n  return (\n    <div className=\"praisemyself-container\">\n      {step < guide.length ? (\n        <>\n          <div className=\"guide\">\n            {guide[step].split('\\n').map((line, index) => (\n              <p key={index} className=\"guide-line\">{line}</p>\n            ))}\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"내 답변 입력\"\n            value={answers[step]}\n            onChange={handleChange}\n            className=\"answer-input\"\n          />\n          <button onClick={handleNext} className=\"guide-next-btn\">\n            {step < guide.length - 1 ? \"다음으로\" : \"오늘의 칭찬 완료\"}\n          </button>\n        </>\n      ) : (\n        <div className=\"summary\">\n          <div className=\"summary-title\">오늘 나에게 칭찬한 점이에요!</div>\n          <div className=\"answers\">\n            {answers.map((answer, index) => (\n              <p key={index} className=\"answer-summary\">{highlightKeywords(answer)}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PraiseMyself;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}